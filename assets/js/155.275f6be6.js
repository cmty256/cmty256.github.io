(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{485:function(_,v,t){"use strict";t.r(v);var r=t(1),e=Object(r.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"springsecurity-oauth2-入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#springsecurity-oauth2-入门"}},[_._v("#")]),_._v(" SpringSecurity + OAuth2 入门")]),_._v(" "),v("h2",{attrs:{id:"oauth2-0-是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-0-是什么"}},[_._v("#")]),_._v(" OAuth2.0 是什么？")]),_._v(" "),v("p",[_._v("OAuth(Open Authorization)是一个开放标准，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，视频，联系人列表），"),v("strong",[_._v("而无需将用户名和密码提供给第三方应用")]),_._v("。")]),_._v(" "),v("blockquote",[v("p",[_._v("很多团队，内部会采用 OAuth2.0 实现一个"),v("strong",[_._v("授权")]),_._v("服务，避免每个上层应用或者服务重复开发。")])]),_._v(" "),v("p",[_._v("OAuth 允许用户提供一个"),v("strong",[_._v("令牌")]),_._v("，而不是用户名和密码来访问他们存放在特定服务提供者的数据。")]),_._v(" "),v("p",[_._v("每一个令牌授权一个特定的网站（例如，视频编辑网站)在特定的时段（例如，接下来的 2 小时内）内访问"),v("strong",[_._v("特定的资源")]),_._v("（例如仅仅是某一相册中的视频）。这样，OAuth 让用户可以授权第三方网站访问他们存储在另外服务提供者的某些特定信息，而非所有内容。")]),_._v(" "),v("blockquote",[v("p",[_._v("如果对接过"),v("a",{attrs:{href:"https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("微信网页授权"),v("OutboundLink")],1),_._v("功能，就会发现分成两种方式："),v("strong",[_._v("静默")]),_._v("授权、"),v("strong",[_._v("手动")]),_._v("授权。")]),_._v(" "),v("p",[_._v("前者只能获取到用户的 "),v("strong",[_._v("openid")]),_._v("，而后者可以获取到用户的"),v("strong",[_._v("基本信息")]),_._v("。")])]),_._v(" "),v("p",[_._v("OAuth2.0 是用于授权的"),v("strong",[_._v("行业标准协议")]),_._v("。OAuth2.0 为简化客户端开发提供了特定的授权流，包括 Web 应用、桌面应用、移动端应用等。")]),_._v(" "),v("blockquote",[v("p",[_._v("OAuth 1.0 协议体系本身存在一些问题，现已被各大开发平台逐渐废弃。")])]),_._v(" "),v("h2",{attrs:{id:"oauth2-0-角色"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-0-角色"}},[_._v("#")]),_._v(" OAuth2.0 角色")]),_._v(" "),v("p",[_._v("在 OAuth2.0 中，有如下角色：")]),_._v(" "),v("ol",[v("li",[v("p",[v("strong",[_._v("Authorization")]),_._v(" Server："),v("strong",[_._v("授权")]),_._v("服务器，用于认证用户。如果客户端认证通过，则发放访问资源服务器的"),v("strong",[_._v("令牌")]),_._v("。")])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("Resource")]),_._v(" Server："),v("strong",[_._v("资源")]),_._v("服务器，拥有受保护资源。如果请求包含正确的"),v("strong",[_._v("访问令牌")]),_._v("，则可以访问资源。")]),_._v(" "),v("ul",[v("li",[_._v("提供管理后台、客户端 API 的服务，都可以认为是 Resource Server。")])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("Client")]),_._v("：客户端。它请求资源服务器时，会带上"),v("strong",[_._v("访问令牌")]),_._v("，从而成功访问资源。")]),_._v(" "),v("ul",[v("li",[_._v("Client 可以是浏览器、客户端，也可以是内部服务。")])])]),_._v(" "),v("li",[v("p",[_._v("Resource "),v("strong",[_._v("Owner")]),_._v("：资源拥有者。最终用户，他有访问资源的"),v("strong",[_._v("账号")]),_._v("与"),v("strong",[_._v("密码")]),_._v("。")]),_._v(" "),v("ul",[v("li",[_._v("可以简单把 Resource Owner 理解成人，他在使用 Client 访问资源。")])])])]),_._v(" "),v("h2",{attrs:{id:"oauth-2-0-运行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#oauth-2-0-运行流程"}},[_._v("#")]),_._v(" OAuth 2.0 运行流程")]),_._v(" "),v("p",[_._v("如下是 OAuth 2.0 的"),v("strong",[_._v("授权码模式")]),_._v("的运行流程：")]),_._v(" "),v("ol",[v("li",[v("em",[_._v("用户")]),_._v("打开"),v("em",[_._v("客户端")]),_._v("以后，"),v("em",[_._v("客户端")]),_._v("要求"),v("em",[_._v("用户")]),_._v("给予授权。")]),_._v(" "),v("li",[v("em",[_._v("用户")]),_._v("同意给予"),v("em",[_._v("客户端")]),_._v("授权。（关键，即如何）")]),_._v(" "),v("li",[v("em",[_._v("客户端")]),_._v("使用上一步获得的授权，向"),v("em",[_._v("认证服务器")]),_._v("申请令牌。")]),_._v(" "),v("li",[v("em",[_._v("认证服务器")]),_._v("对"),v("em",[_._v("客户端")]),_._v("进行认证以后，确认无误，同意发放令牌。")]),_._v(" "),v("li",[v("em",[_._v("客户端")]),_._v("使用令牌，向"),v("em",[_._v("资源服务器")]),_._v("申请获取资源。")]),_._v(" "),v("li",[v("em",[_._v("资源服务器")]),_._v("确认令牌无误，同意向"),v("em",[_._v("客户端")]),_._v("开放资源。")])]),_._v(" "),v("h2",{attrs:{id:"oauth-2-0-授权模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#oauth-2-0-授权模式"}},[_._v("#")]),_._v(" OAuth 2.0 授权模式")]),_._v(" "),v("p",[_._v("客户端必须得到用户的授权（Authorization Grant），才能获得访问令牌（Access Token）。")]),_._v(" "),v("p",[_._v("OAuth2.0 定义了四种授权方式：")]),_._v(" "),v("ul",[v("li",[_._v("（常用）授权码模式（Authorization Code）")]),_._v(" "),v("li",[_._v("密码模式（Resource Owner Password Credentials）")]),_._v(" "),v("li",[_._v("简化模式（Implicit）")]),_._v(" "),v("li",[_._v("客户端模式（Client Credentials）")])]),_._v(" "),v("blockquote",[v("p",[_._v("具体而言，网页授权流程分为四步：")]),_._v(" "),v("ol",[v("li",[_._v("引导用户进入授权页面同意授权，获取 code")]),_._v(" "),v("li",[_._v("通过 code 换取网页授权 access_token（与基础支持中的 access_token 不同）")]),_._v(" "),v("li",[_._v("如果需要，开发者可以刷新网页授权 access_token，避免过期")]),_._v(" "),v("li",[_._v("通过网页授权 access_token 和 openid 获取用户基本信息（支持 UnionID 机制）")])])]),_._v(" "),v("h2",{attrs:{id:"密码模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#密码模式"}},[_._v("#")]),_._v(" 密码模式")]),_._v(" "),v("p",[_._v("密码模式，")]),_._v(" "),v("ul",[v("li",[_._v("用户向客户端提供自己的"),v("strong",[_._v("用户名和密码")]),_._v("。")]),_._v(" "),v("li",[_._v("客户端使用这些信息，向"),v("strong",[_._v("授权服务器")]),_._v("索要授权。")])]),_._v(" "),v("p",[_._v("在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。"),v("strong",[_._v("而授权服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式")]),_._v("。")]),_._v(" "),v("blockquote",[v("p",[_._v("如果客户端和授权服务器都是自己公司的，显然符合。")])]),_._v(" "),v("p",[_._v("操作流程如下：")]),_._v(" "),v("ol",[v("li",[_._v("【用户】向【客户端】提供用户名和密码。")]),_._v(" "),v("li",[_._v("【客户端】将"),v("strong",[_._v("用户名和密码")]),_._v("发给【授权服务器】，向后者"),v("strong",[_._v("请求令牌")]),_._v("。")]),_._v(" "),v("li",[_._v("【授权服务器】确认无误后，向【客户端】提供访问令牌。")])]),_._v(" "),v("h2",{attrs:{id:"授权码模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#授权码模式"}},[_._v("#")]),_._v(" 授权码模式")]),_._v(" "),v("p",[_._v("授权码模式，是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的"),v("strong",[_._v("后台")]),_._v("服务器，与"),v("strong",[_._v("授权")]),_._v("务器进行互动。")]),_._v(" "),v("blockquote",[v("p",[_._v("一般情况下，"),v("strong",[_._v("在有客户端")]),_._v("的情况下，我们与第三方平台常常采用这种方式。")])]),_._v(" "),v("p",[_._v("操作流程如下：")]),_._v(" "),v("ol",[v("li",[_._v("用户访问客户端，后者将前者跳转到到"),v("strong",[_._v("授权")]),_._v("服务器。")]),_._v(" "),v("li",[_._v("用户选择是否给予客户端授权。")]),_._v(" "),v("li",[_._v('假设用户给予授权，授权服务器将跳转到客户端事先指定的"重定向 URI"（Redirection URI），同时附上一个'),v("strong",[_._v("授权码")]),_._v("。")]),_._v(" "),v("li",[_._v('客户端收到授权码，附上早先的"重定向 URI"，向认证服务器申请'),v("strong",[_._v("令牌")]),_._v("。这一步是在客户端的后台的服务器上完成的，对用户不可见。")]),_._v(" "),v("li",[_._v("授权服务器核对了"),v("strong",[_._v("授权码")]),_._v("和"),v("strong",[_._v("重定向 URI")]),_._v("，确认无误后，向客户端发送"),v("strong",[_._v("访问令牌")]),_._v("。")])]),_._v(" "),v("h2",{attrs:{id:"学习参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#学习参考"}},[_._v("#")]),_._v(" 学习参考")]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.iocoder.cn/Spring-Security/OAuth2-learning/?github",target:"_blank",rel:"noopener noreferrer"}},[_._v("芋道 Spring Security OAuth2 入门 | 芋道源码 —— 纯源码解析博客"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("a",{attrs:{href:"https://oauth.net/2/",target:"_blank",rel:"noopener noreferrer"}},[_._v("OAuth 2.0 — 官方文档"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("a",{attrs:{href:"https://oauth.ac.cn/2/",target:"_blank",rel:"noopener noreferrer"}},[_._v("OAuth 2.0 — 中文文档"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=e.exports}}]);