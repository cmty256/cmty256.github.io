(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{425:function(s,a,t){"use strict";t.r(a);var e=t(1),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"讲讲回表查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲讲回表查询"}},[s._v("#")]),s._v(" 讲讲回表查询")]),s._v(" "),a("p",[s._v("在 MySQL 中，“回表查询” 是一个重要的性能优化相关概念，通常与 "),a("strong",[s._v("索引")]),s._v(" 的使用密切相关。理解回表查询的原理有助于更好地设计数据库索引结构，提升查询性能。以下是详细讲解：")]),s._v(" "),a("h2",{attrs:{id:"_1-回表查询的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-回表查询的定义"}},[s._v("#")]),s._v(" 1. "),a("strong",[s._v("回表查询的定义")])]),s._v(" "),a("p",[a("strong",[s._v("回表查询")]),s._v("是指在使用"),a("strong",[s._v("非覆盖索引")]),s._v("的查询中，MySQL 在通过索引获取主键值后，需要回到表中（聚簇索引或数据页）查找完整的行数据。")]),s._v(" "),a("p",[a("strong",[s._v("回表查询的触发场景：")])]),s._v(" "),a("ul",[a("li",[s._v("查询的字段中不全是索引列（例如有非索引字段）。")]),s._v(" "),a("li",[s._v("使用了普通索引（Secondary Index），但最终需要获取完整的行数据。")])]),s._v(" "),a("h2",{attrs:{id:"_2-mysql-索引的两种类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-mysql-索引的两种类型"}},[s._v("#")]),s._v(" 2. "),a("strong",[s._v("MySQL 索引的两种类型")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-聚簇索引-clustered-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-聚簇索引-clustered-index"}},[s._v("#")]),s._v(" 2.1 聚簇索引（Clustered Index）")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("作用")]),s._v("：MySQL InnoDB 存储引擎的主键索引是聚簇索引，数据行直接存储在叶子节点上。")])]),s._v(" "),a("li",[a("p",[s._v("特点：")]),s._v(" "),a("ul",[a("li",[s._v("通过主键查询不需要回表，因为主键索引直接包含了完整行数据。")])])]),s._v(" "),a("li",[a("p",[s._v("二级索引（非主键索引）存储的叶子节点中包含主键值，而不是行数据。")])])]),s._v(" "),a("h3",{attrs:{id:"_2-2-辅助索引-secondary-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-辅助索引-secondary-index"}},[s._v("#")]),s._v(" 2.2 辅助索引（Secondary Index）")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("作用")]),s._v("：辅助索引用于加速查询，但其叶子节点只存储索引列和对应的主键值。")]),s._v(" "),a("li",[a("strong",[s._v("回表发生")]),s._v("：通过辅助索引查找后，若查询字段超出索引列，则需要通过主键值回到聚簇索引查找完整行数据。")])]),s._v(" "),a("h2",{attrs:{id:"_3-回表查询的执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-回表查询的执行流程"}},[s._v("#")]),s._v(" 3. "),a("strong",[s._v("回表查询的执行流程")])]),s._v(" "),a("p",[s._v("以下是 MySQL 查询中回表的典型过程：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("选择索引")]),s._v("：查询优化器决定使用某个二级索引。")]),s._v(" "),a("li",[a("strong",[s._v("索引扫描")]),s._v("：根据二级索引查找满足条件的记录，得到主键值。")]),s._v(" "),a("li",[a("strong",[s._v("回表操作")]),s._v("：根据主键值，访问聚簇索引或数据页获取完整行数据。")]),s._v(" "),a("li",[a("strong",[s._v("返回结果")]),s._v("：将完整行数据返回给客户端。")])]),s._v(" "),a("h2",{attrs:{id:"_4-回表查询的案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-回表查询的案例"}},[s._v("#")]),s._v(" 4. "),a("strong",[s._v("回表查询的案例")])]),s._v(" "),a("p",[s._v("假设有如下表结构：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" users "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 主键")]),s._v("\n    name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 普通字段")]),s._v("\n    email "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 索引字段")]),s._v("\n    age "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 普通字段")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" idx_email "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("查询示例：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" users "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" email "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test@example.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行过程"}},[s._v("#")]),s._v(" 执行过程：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("email")]),s._v(" 列上有辅助索引 "),a("code",[s._v("idx_email")]),s._v("，优化器会选择该索引加速查询。")]),s._v(" "),a("li",[s._v("在 "),a("code",[s._v("idx_email")]),s._v(" 中找到 "),a("code",[s._v("email = 'test@example.com'")]),s._v(" 对应的主键值。")]),s._v(" "),a("li",[s._v("通过主键值回到聚簇索引中读取完整的行数据。")]),s._v(" "),a("li",[s._v("提取 "),a("code",[s._v("name")]),s._v(" 和 "),a("code",[s._v("age")]),s._v(" 返回结果。")])]),s._v(" "),a("h2",{attrs:{id:"_5-覆盖索引避免回表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-覆盖索引避免回表"}},[s._v("#")]),s._v(" 5. "),a("strong",[s._v("覆盖索引避免回表")])]),s._v(" "),a("p",[a("strong",[s._v("覆盖索引")]),s._v("是指查询的所有字段都能通过索引直接获取，无需回表。")]),s._v(" "),a("p",[s._v("改造上面的案例：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" idx_email_name_age "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("改造后的查询：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" users "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" email "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test@example.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("执行过程：")])]),s._v(" "),a("ol",[a("li",[s._v("查询所需的字段 ("),a("code",[s._v("email")]),s._v(", "),a("code",[s._v("name")]),s._v(", "),a("code",[s._v("age")]),s._v(") 已全部包含在索引 "),a("code",[s._v("idx_email_name_age")]),s._v(" 的叶子节点中。")]),s._v(" "),a("li",[s._v("直接从索引获取数据，无需回表。")])]),s._v(" "),a("p",[a("strong",[s._v("优点：")])]),s._v(" "),a("ul",[a("li",[s._v("避免了回表操作，提升查询效率。")]),s._v(" "),a("li",[s._v("减少磁盘 IO 和资源消耗。")])]),s._v(" "),a("h2",{attrs:{id:"_6-回表查询的性能影响"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-回表查询的性能影响"}},[s._v("#")]),s._v(" 6. "),a("strong",[s._v("回表查询的性能影响")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("回表次数")]),s._v("：回表次数与查询结果的匹配行数成正比，匹配行越多，回表成本越高。")]),s._v(" "),a("li",[a("strong",[s._v("随机 IO")]),s._v("：回表需要通过主键值随机访问聚簇索引，对磁盘 IO 造成较大压力。")]),s._v(" "),a("li",[a("strong",[s._v("性能瓶颈")]),s._v("：回表查询可能成为性能优化的重点，特别是高并发环境下。")])]),s._v(" "),a("h2",{attrs:{id:"_7-优化回表查询的策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-优化回表查询的策略"}},[s._v("#")]),s._v(" 7. "),a("strong",[s._v("优化回表查询的策略")])]),s._v(" "),a("h3",{attrs:{id:"_7-1-使用覆盖索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-使用覆盖索引"}},[s._v("#")]),s._v(" 7.1 使用覆盖索引")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("尽量设计查询字段所需的索引，避免回表。")])]),s._v(" "),a("li",[a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" idx_email_name_age "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"_7-2-减少查询字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-减少查询字段"}},[s._v("#")]),s._v(" 7.2 减少查询字段")]),s._v(" "),a("ul",[a("li",[s._v("仅查询必要的字段，避免因多余字段触发回表。")])]),s._v(" "),a("h3",{attrs:{id:"_7-3-限制返回行数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-限制返回行数"}},[s._v("#")]),s._v(" 7.3 限制返回行数")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("使用 "),a("code",[s._v("LIMIT")]),s._v(" 限制返回的记录数量，减少回表的总次数。")])]),s._v(" "),a("li",[a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" users "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" email "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test%'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"_7-4-检查索引选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-检查索引选择"}},[s._v("#")]),s._v(" 7.4 检查索引选择")]),s._v(" "),a("ul",[a("li",[s._v("确保优化器选择了最佳索引，使用 "),a("code",[s._v("EXPLAIN")]),s._v(" 分析查询计划。")])]),s._v(" "),a("h2",{attrs:{id:"_8-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-总结"}},[s._v("#")]),s._v(" 8. "),a("strong",[s._v("总结")])]),s._v(" "),a("p",[s._v("回表查询是 MySQL 查询优化中的关键知识点，它的发生主要取决于索引设计与查询字段的匹配程度。通过合理设计覆盖索引、精简查询字段、优化索引结构，可以有效降低回表查询的次数，从而提升数据库性能。")])])}),[],!1,null,null,null);a.default=r.exports}}]);