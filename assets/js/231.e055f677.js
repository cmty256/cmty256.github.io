(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{559:function(s,t,e){"use strict";e.r(t);var i=e(1),a=Object(i.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"redis-实战笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-实战笔记"}},[s._v("#")]),s._v(" Redis 实战笔记")]),s._v(" "),t("h2",{attrs:{id:"技术架构图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技术架构图"}},[s._v("#")]),s._v(" 技术架构图")]),s._v(" "),t("p",[s._v("这个项目是单体项目，架构比较简单，下图依然是理想架构，实际上只用单台 Tomcat、MysQL、Redis 即可:")]),s._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"image","data-src":"https://cmty256.github.io/imgs-blog/project/image.2dq2pr4cg3ms.webp",loading:"lazy"}})]),s._v(" "),t("h2",{attrs:{id:"目录解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录解析"}},[s._v("#")]),s._v(" 目录解析")]),s._v(" "),t("h3",{attrs:{id:"config-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config-目录"}},[s._v("#")]),s._v(" "),t("strong",[s._v("config 目录")])]),s._v(" "),t("p",[s._v("存放项目依赖相关配置")]),s._v(" "),t("ul",[t("li",[s._v("MvcConfig: 配置了登录、自动刷新登录 Token 的拦截器")]),s._v(" "),t("li",[s._v("MybatisConfig: 配置 MyBatis Plus 分页插件")]),s._v(" "),t("li",[s._v("RedissonConfig: 创建单例 Redisson 客户端")]),s._v(" "),t("li",[s._v("WebExceptionAdvice: 全局响应拦截器")])]),s._v(" "),t("h3",{attrs:{id:"controller-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controller-目录"}},[s._v("#")]),s._v(" "),t("strong",[s._v("controller 目录")])]),s._v(" "),t("p",[s._v("存放 Restful 风格的 API接口")]),s._v(" "),t("h3",{attrs:{id:"dto-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dto-目录"}},[s._v("#")]),s._v(" "),t("strong",[s._v("dto 目录")])]),s._v(" "),t("p",[s._v("存放业务封装类，如 Result 通用响应封装 (不推荐学习它的写法)")]),s._v(" "),t("h3",{attrs:{id:"entity-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entity-目录"}},[s._v("#")]),s._v(" entity 目录")]),s._v(" "),t("p",[s._v("存放和数据库对应的 Java POJO 实体类，一般是用 MyBatisX 等插件自动生成")]),s._v(" "),t("h3",{attrs:{id:"mapper-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mapper-目录"}},[s._v("#")]),s._v(" mapper 目录")]),s._v(" "),t("p",[s._v("存放操作数据库的代码，基本没有自定义 SQL，都是复用了 MyBatis Plus 的方法，不做重点学习")]),s._v(" "),t("h3",{attrs:{id:"service-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#service-目录"}},[s._v("#")]),s._v(" service 目录")]),s._v(" "),t("p",[s._v("存放业务逻辑处理代码，需要重点学习")]),s._v(" "),t("ul",[t("li",[s._v("BlogServicelmpl: 基于 Redis 实现点赞、按时间排序的点赞排行榜；基于 Redis 实现拉模式的 Feed流，推荐学习")]),s._v(" "),t("li",[s._v("FollowServicelmpl: 基于 Redis 集合实现关注、共同关注，推荐学习")]),s._v(" "),t("li",[s._v("ShopServicelmpl: 基于 Redis 缓存优化店铺查询性能；基于 Redis GEO 实现附近店铺按距离排席，推荐学习")]),s._v(" "),t("li",[s._v("UserServicelmpl: 基于 Redis 实现短信登录(分布式 Session)，推荐学习 (虽然没有真的实现短信登录而是通过日志打印验证码代替 -- 可考虑阿里云短信服务)")]),s._v(" "),t("li",[s._v("VoucherOrderServicelmpl: 基于 Redis 分布式锁、Redis + Lua 两种方式，结合消息队列，共同实现了秒杀和一人一单功能，非常值得学习")]),s._v(" "),t("li",[s._v("VoucherServicelmpl: 添加优惠券，并将库存保存在 Redis 中，为秒杀做准备")])]),s._v(" "),t("h3",{attrs:{id:"utils-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#utils-目录"}},[s._v("#")]),s._v(" utils 目录")]),s._v(" "),t("p",[s._v("存放项目内通用的工具类，需要重点学习")]),s._v(" "),t("ul",[t("li",[s._v("CacheClient: 封装了通用的缓存工具类，涉及泛型、函数式编程等知识点，值得学习")]),s._v(" "),t("li",[s._v("RedisConstants: 保存项目中用到的 Redis 键、过期时间等常量，值得学习")]),s._v(" "),t("li",[s._v("RedisldWorker: 基于 Redis 的全局唯一自增 id 生成器，值得学习")]),s._v(" "),t("li",[s._v("RedisTokenInterceptor: 自动刷新 Redis 登录 Token 有效期，值得学习")]),s._v(" "),t("li",[s._v("SimpleRedisLock: 简单的 Redis 锁实现，了解即可，一般用 Redisson")]),s._v(" "),t("li",[s._v("UserHolder: 线程内缓存用户信息，可以学习")])])])}),[],!1,null,null,null);t.default=a.exports}}]);