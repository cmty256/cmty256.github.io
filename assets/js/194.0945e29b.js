(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{523:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"开发疑惑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发疑惑"}},[s._v("#")]),s._v(" 开发疑惑")]),s._v(" "),t("h2",{attrs:{id:"什么是-pojo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-pojo"}},[s._v("#")]),s._v(" 什么是 POJO")]),s._v(" "),t("p",[s._v("POJO（Plain Old Java Object）是一种普通的 Java 对象，通常是"),t("strong",[s._v("指与数据模型相关的类")]),s._v("。")]),s._v(" "),t("p",[s._v("其中可能涉及以下几个部分：")]),s._v(" "),t("ol",[t("li",[s._v("DTO（Data Transfer Object）：DTO 是用于在不同层之间传输数据的对象。它通常包含了与数据库表字段一一对应的属性，并提供了用于数据传输的 getter 和 setter 方法。")]),s._v(" "),t("li",[s._v("Entity：Entity（实体类）通常用于映射数据库中的表或文档。它包含了与数据库表字段一一对应的属性，并提供了持久化操作的方法。Entity 对象一般用于 ORM（对象关系映射）框架，如 Hibernate，来进行数据库操作。")]),s._v(" "),t("li",[s._v("VO（Value Object）：VO 是一种用于封装某个特定领域的值或数据的对象。它可以包含多个属性，并且这些属性可以是不同的数据类型。VO 对象通常用于在领域模型之间传递数据，而不直接与数据库交互。")])]),s._v(" "),t("p",[s._v("这些对象（DTO、Entity、VO）都可以被归类为 POJO，因为它们是普通的 Java 对象，不依赖于特定的框架或技术。它们仅包含数据字段和相应的访问方法，不包含业务逻辑或特定的操作。")]),s._v(" "),t("h2",{attrs:{id:"foreach-的三种写法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#foreach-的三种写法"}},[s._v("#")]),s._v(" foreach 的三种写法")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" numbers "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Arrays")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("asList")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// java 5 引入")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" number "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" numbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// java 8 写法")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用Stream的forEach方法进行迭代")]),s._v("\nnumbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("stream")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用Lambda表达式和方法引用进行迭代")]),s._v("\nnumbers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h2",{attrs:{id:"持久化与半持久化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#持久化与半持久化"}},[s._v("#")]),s._v(" 持久化与半持久化")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("持久化")]),s._v("将数据写入非易失性存储介质中，以确保数据在系统"),t("strong",[s._v("重启后仍然可用")]),s._v("，")]),s._v(" "),t("li",[s._v("而"),t("strong",[s._v("半持久化")]),s._v("只在系统运行期间保留数据，并在系统关闭或"),t("strong",[s._v("重启时丢失")]),s._v("。")])]),s._v(" "),t("p",[s._v("持久化适用于需要长期保存数据的场景，而半持久化适用于临时数据或不需要长期存储的场景。")]),s._v(" "),t("h2",{attrs:{id:"rocketmq-集群部署问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq-集群部署问题"}},[s._v("#")]),s._v(" RocketMQ 集群部署问题")]),s._v(" "),t("p",[s._v("在 RocketMQ 中，推荐部署三台服务器的原因是为了实现高可用性和数据冗余。这种部署方式通常被称为主从复制或者主从模式。")]),s._v(" "),t("p",[s._v("部署三台服务器的好处是，当一台服务器发生故障或者需要维护时，系统可以继续正常运行。其中两台服务器承担主从节点的角色，而第三台服务器则可以作为备用节点。这样，即使有一台服务器宕机，消息仍然可以在其他服务器上进行处理和传递，"),t("strong",[s._v("确保消息的可靠性和持久性")]),s._v("。")]),s._v(" "),t("p",[s._v("另外，将主从节点部署在两台服务器上也有其优势。通过将主节点和从节点部署在不同的服务器上，可以"),t("strong",[s._v("实现数据的冗余和负载均衡")]),s._v("。主节点负责消息的写入和处理，而从节点则负责消息的备份和复制。这样可以提高系统的吞吐量和性能，并降低单点故障的风险。")]),s._v(" "),t("p",[s._v("总结起来，RocketMQ 推荐部署三台服务器并在两台服务器上部署主从节点，旨在提供"),t("strong",[s._v("高可用性")]),s._v("、数据冗余和负载均衡，以确保消息系统的可靠性和性能。")]),s._v(" "),t("h2",{attrs:{id:"什么是异步编排"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是异步编排"}},[s._v("#")]),s._v(" 什么是异步编排")]),s._v(" "),t("p",[s._v("异步编排是一种编程模式或设计方法，用于处理异步操作和任务的并发执行和协调。")]),s._v(" "),t("ul",[t("li",[s._v("在传统的同步编程中，代码会按照顺序逐行执行，当遇到耗时的操作时，程序会阻塞等待操作完成后再继续执行下一步。")]),s._v(" "),t("li",[s._v("而异步编排则允许在执行一个异步操作时，不会阻塞程序的其他部分，而是可以继续执行其他任务。")])]),s._v(" "),t("p",[s._v("异步编排的目的是提高程序的并发性和性能，特别是在处理多个独立异步任务或操作时。它可以帮助程序充分利用系统资源，以提高处理速度和响应性。")]),s._v(" "),t("p",[s._v("在异步编排中，通常会使用以下方法或技术：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("回调函数：")]),s._v(" 在执行异步任务时，可以指定一个回调函数，该函数会在任务完成后被调用，用于处理任务的结果。")]),s._v(" "),t("li",[t("strong",[s._v("Promise/Future：")]),s._v(" 使用 Promise 或 Future 对象可以在执行异步任务后获取其结果，而不需要阻塞程序的其他部分。")]),s._v(" "),t("li",[t("strong",[s._v("异步事件处理：")]),s._v(" 使用事件驱动模式来处理异步操作的完成事件，通过注册监听器或订阅事件来处理任务的结果。")]),s._v(" "),t("li",[t("strong",[s._v("异步任务队列：")]),s._v(" 将异步任务放入队列中，由专门的线程或进程来处理，以充分利用系统资源和提高并发性。")]),s._v(" "),t("li",[t("strong",[s._v("并行计算：")]),s._v(" 在执行多个独立异步任务时，可以将它们并行处理，以加快任务的完成时间。")])]),s._v(" "),t("p",[s._v("异步编排在现代编程中得到广泛应用，特别是在处理网络请求、数据库查询、IO 操作等涉及到耗时的任务时，通过异步编排可以提高程序的性能和响应性，使得程序能够更高效地处理并发操作。")]),s._v(" "),t("h2",{attrs:{id:"分布式的含义是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分布式的含义是什么"}},[s._v("#")]),s._v(" 分布式的含义是什么")]),s._v(" "),t("p",[s._v("分布式的含义是指将一个系统或应用拆分成多个独立的组件（或子系统），这些组件可以在不同的计算机或服务器上运行，并通过网络进行通信和协作。每个组件负责特定的功能或任务，通过相互之间的通信和协作，实现整个系统的功能。")]),s._v(" "),t("p",[s._v("在分布式系统中，各个组件可以独立运行，这使得系统更加灵活、可扩展和容错。分布式系统通常涉及多台计算机，每台计算机可以处理一部分工作负载，从而提高系统的性能和吞吐量。")]),s._v(" "),t("p",[s._v("总的来说，分布式系统是一种将复杂的系统拆分为多个独立组件，分别运行在不同计算机上，通过网络相互通信和协作，以提高系统的性能、可扩展性和可靠性的设计架构。")]),s._v(" "),t("h2",{attrs:{id:"jedis-和-redis-是什么关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jedis-和-redis-是什么关系"}},[s._v("#")]),s._v(" Jedis 和 redis 是什么关系")]),s._v(" "),t("p",[s._v("Jedis 是一个 Java 客户端库，用于与 Redis 数据库进行交互。它提供了一组丰富的方法和功能，用于连接、执行命令和操作 Redis 数据库。")]),s._v(" "),t("p",[s._v("Redis 是一个开源的高性能键值存储数据库，支持持久化、数据类型丰富、分布式和高可用性等特性。它以内存中的数据结构存储数据，并通过网络提供对数据的访问。")]),s._v(" "),t("p",[t("strong",[s._v("Jedis 是 Redis 客户端库之一")]),s._v("，专门为 Java 语言设计和实现。它通过与 Redis 服务器建立连接，发送命令并接收响应来实现与 Redis 的交互。Jedis 提供了简单、直观的 API，使 Java 开发人员可以方便地使用 Redis 数据库。它支持与 Redis 的各种操作，包括字符串、哈希、列表、集合、有序集合等数据结构的读写操作。")]),s._v(" "),t("p",[s._v("在使用 Jedis 时，你需要将 Jedis 客户端库添加到你的项目中，并在代码中创建 Jedis 对象来与 Redis 进行通信。通过 Jedis，你可以执行各种 Redis 命令，如 SET、GET、HSET、HGET、LPUSH、LRANGE 等。")]),s._v(" "),t("p",[s._v("除了 Jedis，还有其他编程语言和平台的 Redis 客户端库，如 StackExchange.Redis（C#）、redis-py（Python）、redis-rb（Ruby）等。这些客户端库都是用于在不同编程语言中与 Redis 进行交互的工具。")]),s._v(" "),t("p",[s._v("因此，Jedis 是 Redis 的 Java 客户端库之一，用于在 Java 应用程序中使用 Redis 数据库。它提供了方便的方法和功能，使 Java 开发人员能够使用 Redis 的各种功能和数据结构。")]),s._v(" "),t("h2",{attrs:{id:"雪花算法和-uuid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#雪花算法和-uuid"}},[s._v("#")]),s._v(" 雪花算法和 UUID")]),s._v(" "),t("p",[s._v("雪花算法（Snowflake Algorithm）和 UUID（Universally Unique Identifier）都是用于生成唯一标识符（ID）的方法，但它们在生成方式、长度和适用场景上存在一些区别。")]),s._v(" "),t("p",[s._v("雪花算法是一种"),t("strong",[s._v("基于时间戳和机器标识的算法")]),s._v("，用于生成趋势递增、有序且唯一的 ID。它使用一个 64 位的整数表示 ID，其中包含时间戳、数据中心 ID、机器 ID 和序列号。通过将这些部分合理地组合在一起，雪花算法可以在分布式系统中生成全局唯一的 ID。由于雪花算法基于时间戳，因此生成的 ID 保留了时间上的排序性。这种算法适合于分布式系统，以确保生成的 ID 在分布式环境中的唯一性。")]),s._v(" "),t("p",[s._v("UUID 是一种标准化的"),t("strong",[s._v("全局唯一标识符")]),s._v("，它的长度为 128 位（16 字节），通常表示为 32 个十六进制数字的字符串。UUID 是由计算机硬件地址、当前时间戳和随机数等信息生成的。UUID 的生成过程是基于随机性的，因此可以在分布式环境中保持全局唯一性。与雪花算法不同，UUID 并不保留时间上的排序性，因此生成的 ID 是无序的。UUID 适用于需要在不同系统、不同数据库之间保持唯一性的场景。")]),s._v(" "),t("p",[s._v("选择使用雪花算法还是 UUID 取决于具体的需求和应用场景：")]),s._v(" "),t("ul",[t("li",[s._v("如果需要在分布式系统中保持全局唯一性并具有趋势递增的特性，可以选择雪花算法。")]),s._v(" "),t("li",[s._v("如果需要在不同系统、不同数据库之间保持全局唯一性，并且无需关注排序性和时间相关的特性，可以选择 UUID。")])]),s._v(" "),t("p",[s._v("选择自增整数或 UUID 作为主键 ID 取决于以下因素：")]),s._v(" "),t("ul",[t("li",[s._v("需求：根据具体需求来判断。如果需要在数据库层面保证递增的唯一性，可以选择自增整数。如果需要在分布式环境下保证全局唯一性，可以选择 UUID。")]),s._v(" "),t("li",[s._v("性能：自增整数通常比 UUID 在索引、查询和排序等方面更高效，因为它们可以利用数据库的自增特性和整数索引。UUID 则相对较大，可能会对数据库性能产生一定的影响。")]),s._v(" "),t("li",[s._v("可读性：自增整数主键具有可读性，可以更容易地理解和推断出记录的创建顺序。UUID 则相对较长，不具备直观的可读性。")])]),s._v(" "),t("h2",{attrs:{id:"如果-redis-数据库宕机了咋办"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果-redis-数据库宕机了咋办"}},[s._v("#")]),s._v(" 如果 redis 数据库宕机了咋办")]),s._v(" "),t("p",[s._v("如果 Redis 数据库宕机了，你可以采取以下步骤来应对这种情况：")]),s._v(" "),t("ol",[t("li",[s._v("检查 Redis 服务器状态：首先，确认 Redis 服务器是否真的宕机了。你可以尝试连接到 Redis 服务器并执行一些基本操作来验证其状态。")]),s._v(" "),t("li",[s._v("恢复 Redis 服务器：如果确认 Redis 服务器宕机了，你需要采取相应的措施来恢复它。具体的步骤可能因你的环境和配置而有所不同。通常，可以尝试重启 Redis 服务器，或者检查日志文件以了解可能的错误原因。")]),s._v(" "),t("li",[s._v("备份和恢复数据：如果 Redis 数据库的数据没有进行持久化保存（如配置了 RDB 持久化或 AOF 持久化），那么在 Redis 宕机后，数据可能会丢失。如果你有 Redis 数据库的备份，可以尝试使用备份数据来进行恢复。否则，你需要考虑重新构建丢失的数据。")]),s._v(" "),t("li",[s._v("容错和高可用性：为了避免单点故障，你可以在 Redis 架构中引入容错和高可用性机制。例如，使用 Redis Sentinel 或 Redis Cluster 来实现故障转移和自动故障恢复。")]),s._v(" "),t("li",[s._v("监控和预警：建立监控系统来实时监测 Redis 服务器的状态。这样，你可以及时收到警报并采取措施来应对宕机或其他问题。")])]),s._v(" "),t("h2",{attrs:{id:"局部变量没有默认值-那包装类型的局部变量呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#局部变量没有默认值-那包装类型的局部变量呢"}},[s._v("#")]),s._v(" 局部变量没有默认值，那包装类型的局部变量呢")]),s._v(" "),t("p",[s._v("局部变量无论是基本数据类型还是包装类型，在 Java 中都没有默认值。局部变量在声明时必须显式地初始化，否则编译器会报错。")]),s._v(" "),t("p",[s._v("对于基本数据类型的局部变量，如果在声明时没有初始化，编译器会提示错误。例如：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exampleMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编译错误，x未初始化")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("对于包装类型的局部变量，同样没有默认值，并且也必须显式地初始化。例如：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exampleMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编译错误，y未初始化")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("需要注意的是，类的成员变量（包括静态成员变量和实例成员变量）会有默认值，但局部变量不会。成员变量的默认值是根据数据类型来确定的，例如，整数类型的成员变量默认为 0，布尔类型的成员变量默认为 false，引用类型的成员变量默认为 null 等。但这些规则不适用于局部变量。")]),s._v(" "),t("h2",{attrs:{id:"什么是-sql-注入-如何防止"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-sql-注入-如何防止"}},[s._v("#")]),s._v(" 什么是 SQL 注入，如何防止？")]),s._v(" "),t("p",[s._v("SQL 注入（SQL Injection）是一种常见的"),t("strong",[s._v("网络安全漏洞")]),s._v("，它发生在 Web 应用程序中，当恶意用户在输入数据时，将恶意的 SQL 代码插入到输入中，从而导致应用程序执行非预期的 SQL 查询。")]),s._v(" "),t("p",[s._v("攻击者通过 SQL 注入可以访问、修改或删除数据库中的数据，甚至完全控制数据库。")]),s._v(" "),t("p",[s._v("SQL 注入的原因是：未经适当验证和处理的用户输入被直接拼接到 SQL 查询语句中，使得攻击者可以修改 SQL 查询的逻辑。例如，一个简单的登录查询可能是这样的：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" users "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" username "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'输入的用户名'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" password "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'输入的密码'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如果应用程序未对用户输入进行适当的验证和处理，攻击者可以输入以下内容：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("输入的用户名: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' OR '")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n输入的密码: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' OR '")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("那么构造出的 SQL 查询就变成了：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" users "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" username "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" password "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("由于 "),t("code",[s._v("'1'='1'")]),s._v(" 始终为真，上述查询将返回数据库中所有用户的信息，绕过了正常的身份验证。")]),s._v(" "),t("blockquote",[t("p",[s._v("为了防止 SQL 注入攻击，应该采取以下措施：")])]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("使用参数化查询（Prepared Statements）：")]),s._v(" 参数化查询是一种预编译 SQL 语句，参数值与 SQL 语句分开，不会将用户输入直接拼接到 SQL 语句中，从而避免了 SQL 注入的风险。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用PreparedStatement预编译SQL查询语句，避免SQL注入的风险")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" sql "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SELECT * FROM users WHERE username = ? AND password = ?"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建PreparedStatement对象，并将SQL语句传入")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PreparedStatement")]),s._v(" pstmt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" connection"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("prepareStatement")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置参数值，参数索引从1开始")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将用户输入的用户名设置到第一个参数位置（索引1）")]),s._v("\npstmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" userInputUsername"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将用户输入的密码设置到第二个参数位置（索引2）")]),s._v("\npstmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" userInputPassword"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行查询，并将查询结果保存到ResultSet对象中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ResultSet")]),s._v(" resultSet "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pstmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("executeQuery")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("结果：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" users "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" username "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\' OR \\'1\\'=\\'1\\''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" password "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\' OR \\'1\\'=\\'1\\''")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("code",[s._v("' OR '1'='1'")]),s._v(" 被当作字符串值，将 "),t("code",[s._v("'")]),s._v(" 转义为 "),t("code",[s._v("\\'")]),s._v("。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("使用 ORM 框架：")]),s._v(" 对象关系映射（ORM）框架如 Hibernate、MyBatis 等，可以自动处理 SQL 查询，避免手动拼接 SQL 语句，从而减少了 SQL 注入的可能性。")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 示例：MyBatis映射配置文件 --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 在MyBatis的映射配置文件中，通过使用#{}语法来进行参数化查询，MyBatis会自动对参数值进行转义，以防止SQL注入。 --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("getUserByUsernameAndPassword"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("resultType")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("User"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    SELECT * FROM users WHERE username = #{username} AND password = #{password}\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("select")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("在这个查询中，"),t("code",[s._v("' OR '1'='1'")]),s._v(" 被当作字符串值，而不是 SQL 代码。")]),s._v(" "),t("p",[s._v("输入")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("输入的用户名: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' OR '")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n输入的密码: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' OR '")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("最终 sql 语句会变为：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" users "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" username "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" password "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("输入验证和过滤：")]),s._v(" 对于用户输入，要进行验证和过滤，确保只有合法的数据被用于数据库查询。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("最小权限原则：")]),s._v(" 数据库用户应该具有最小的权限来执行必要的操作，这样即使发生 SQL 注入，攻击者也无法进行敏感的操作。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 示例：数据库用户只有查询权限，没有更新和删除权限")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GRANT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" users "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),s._v(" read_only_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("错误处理：")]),s._v(" 在应用程序中不要直接返回数据库错误信息给用户，以免攻击者获得有关数据库结构的敏感信息。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("定期更新和维护：")]),s._v(" 定期更新和维护数据库和应用程序，确保已知的漏洞得到修复。")])])]),s._v(" "),t("h2",{attrs:{id:"何为预编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#何为预编译"}},[s._v("#")]),s._v(" 何为预编译？")]),s._v(" "),t("p",[s._v("预编译（Prepared Statements）是一种数据库查询优化技术，在执行SQL查询之前，数据库管理系统会将SQL查询语句预先编译成一种内部表示形式，然后将参数值与预编译的查询计划进行绑定。")]),s._v(" "),t("h2",{attrs:{id:"何为高可用-何为高性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#何为高可用-何为高性能"}},[s._v("#")]),s._v(" 何为高可用，何为高性能？")]),s._v(" "),t("ol",[t("li",[s._v("高可用（High Availability）：")])]),s._v(" "),t("p",[s._v("高可用性指系统或服务在长时间运行过程中，保持持续可用的能力，即系统在面对各种故障或异常情况时，能够继续提供服务而不发生中断或停机。"),t("strong",[s._v("高可用性是为了确保系统在任何时间都能够可靠地运行，以满足用户的需求")]),s._v("。")]),s._v(" "),t("p",[s._v("为实现高可用性，通常需要采取一系列措施，包括但不限于：")]),s._v(" "),t("ul",[t("li",[s._v("使用冗余设计：例如备份服务器、集群部署等，当一个节点出现故障时，其他节点能够顶替其工作，确保服务的持续性。")]),s._v(" "),t("li",[s._v("异地多活部署：将系统在不同地理位置进行部署，以防止单点故障和灾难性故障的影响。")]),s._v(" "),t("li",[s._v("自动故障切换：当出现故障时，自动切换到备用系统或节点，尽量减少人工干预和停机时间。")]),s._v(" "),t("li",[s._v("监控与报警：建立健全的监控系统，及时发现问题并采取措施解决。")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("高性能（High Performance）：")])]),s._v(" "),t("p",[t("strong",[s._v("高性能指系统或服务能够在给定的资源限制下，以更快的速度完成任务或处理更多的请求")]),s._v("。高性能系统通常具有更低的响应时间和更高的吞吐量，能够更好地满足用户对于效率和速度的要求。")]),s._v(" "),t("p",[s._v("为实现高性能，可以考虑以下方面：")]),s._v(" "),t("ul",[t("li",[s._v("优化算法和数据结构：使用更高效的算法和数据结构，以减少计算和存储资源的消耗。")]),s._v(" "),t("li",[s._v("并发处理：充分利用多核处理器和多线程技术，实现并行处理，提高系统的并发能力。")]),s._v(" "),t("li",[s._v("缓存：使用缓存技术减少对底层存储系统的访问，加快数据的获取速度。")]),s._v(" "),t("li",[s._v("负载均衡：合理分配请求到不同的处理节点，避免单个节点过载，保持系统的稳定和高效运行。")])]),s._v(" "),t("p",[s._v("高可用性和高性能都是构建稳定、高效的系统和服务的重要目标。")]),s._v(" "),t("ul",[t("li",[s._v("高可用性确保系统持续可用，不会因为故障而中断，")]),s._v(" "),t("li",[s._v("而高性能则追求在资源限制下以更快的速度完成任务和处理请求。")])]),s._v(" "),t("h2",{attrs:{id:"qps-和吞吐量的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#qps-和吞吐量的区别"}},[s._v("#")]),s._v(" QPS 和吞吐量的区别？")]),s._v(" "),t("p",[s._v("QPS（Queries Per Second）和吞吐量（Throughput）都是衡量系统性能的指标，但它们的含义和计算方式有所不同。")]),s._v(" "),t("ol",[t("li",[s._v("QPS（Queries Per Second）：QPS 是指每秒钟系统能够处理的请求数量，通常用于衡量系统的并发处理能力。在 Web 应用中，QPS 表示每秒钟能够处理的 HTTP 请求次数。QPS 越高，系统的并发处理能力越强，能够同时处理更多的请求。")]),s._v(" "),t("li",[s._v("吞吐量（Throughput）：吞吐量是指在一定时间内系统实际处理的任务量或数据量。在计算机领域，吞吐量通常表示每秒钟系统能够处理的数据量或事务量。吞吐量越高，表示系统能够在单位时间内处理更多的任务或数据。")])]),s._v(" "),t("h2",{attrs:{id:"如何清空控制台的信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何清空控制台的信息"}},[s._v("#")]),s._v(" 如何清空控制台的信息？")]),s._v(" "),t("p",[s._v("清空控制台信息的方法")]),s._v(" "),t("ol",[t("li",[s._v("Windows 系统：使用 "),t("code",[s._v("cls")]),s._v(" 命令可以清空控制台信息。可以在控制台输入 "),t("code",[s._v("cls")]),s._v(" 并按下回车键来清空信息。")]),s._v(" "),t("li",[s._v("Linux / macOS 系统：使用 "),t("code",[s._v("clear")]),s._v(" 命令可以清空控制台信息。可以在终端输入 "),t("code",[s._v("clear")]),s._v(" 并按下回车键来清空信息。")])]),s._v(" "),t("h2",{attrs:{id:"nginx-能做什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-能做什么"}},[s._v("#")]),s._v(" Nginx 能做什么？")]),s._v(" "),t("p",[s._v('Nginx（发音为 "engine x"）是一个高性能的开源反向代理服务器和 Web 服务器软件，具有轻量级、高并发、低内存消耗等特点。')]),s._v(" "),t("p",[s._v("Nginx 主要用于以下几个方面：")]),s._v(" "),t("ol",[t("li",[t("p",[t("strong",[s._v("反向代理")]),s._v("：Nginx 作为反向代理服务器，可以接收客户端请求并转发到后端的多个应用服务器，从而实现负载均衡和高可用性。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Web 服务器")]),s._v("：Nginx 本身也可以作为 Web 服务器，用于直接处理和响应客户端的 HTTP 请求，返回静态或动态内容。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("负载均衡")]),s._v("：Nginx 支持多种负载均衡算法，如轮询、IP Hash 等，可以将请求分发到后端的多个服务器，均衡负载，提高系统的性能和可扩展性。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("缓存加速")]),s._v("：Nginx 可以缓存静态内容，如图片、CSS、JavaScript 等，从而减轻后端服务器的负担，加快内容的访问速度。")])]),s._v(" "),t("li",[t("p",[s._v("SSL 终结：Nginx 可以作为 SSL(一种加密协议) 终结代理，接收加密的 HTTPS 请求，解密后将请求转发到后端 HTTP 服务器。")])]),s._v(" "),t("li",[t("p",[s._v("反向代理缓存：Nginx 可以缓存后端服务器的响应内容，从而减轻后端服务器的压力，提高响应速度。")])]),s._v(" "),t("li",[t("p",[s._v("动态模块支持：Nginx 支持动态模块，可以通过安装插件扩展其功能，例如支持 HTTP/2、Gzip 压缩、GeoIP 等。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("URL 重写和重定向")]),s._v("：Nginx 支持强大的 URL 重写和重定向功能，可以通过配置规则对 URL 进行修改和重定向。")])])]),s._v(" "),t("h2",{attrs:{id:"日志级别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#日志级别"}},[s._v("#")]),s._v(" 日志级别")]),s._v(" "),t("p",[s._v("日志级别用于确定记录在日志中的消息的重要性和严重性。不同的日志级别对应不同的日志消息类型，通常按照以下常见的级别进行分类（从高到低）：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("ERROR（错误）")]),s._v(": 用于记录严重错误，表示应用程序可能无法继续正常运行。这通常是致命错误，需要立即处理。")]),s._v(" "),t("li",[t("strong",[s._v("WARN（警告）")]),s._v(": 用于记录一些不太严重的问题或潜在的问题，这些问题不会导致应用程序停止运行，但可能需要关注和处理。")]),s._v(" "),t("li",[t("strong",[s._v("INFO（信息）")]),s._v(": 用于记录一般性的信息性消息，例如应用程序启动、配置信息、重要事件等。这些消息有助于了解应用程序的状态。")]),s._v(" "),t("li",[t("strong",[s._v("DEBUG（调试）")]),s._v(": 用于记录详细的调试信息，通常用于开发和调试过程中，以便排查问题。在生产环境中通常会关闭 DEBUG 级别的日志。")]),s._v(" "),t("li",[t("strong",[s._v("TRACE（跟踪）")]),s._v(": 最详细的日志级别，通常记录了每个方法的调用和变量值。TRACE 级别通常用于深度调试，对于大多数应用程序来说是不需要的，因为它会生成大量的日志数据。")])]),s._v(" "),t("p",[s._v("在实际应用程序中，可以根据需要使用这些日志级别来记录不同类型的消息。通常，可以配置日志系统，以便在不同环境（例如开发、测试、生产）中使用不同的日志级别，以便更好地管理日志信息。例如，在生产环境中通常会将日志级别设置为 ERROR 或 WARN，以减少日志数据量，而在开发环境中可以使用 DEBUG 或 TRACE 级别以便更好地进行调试。")]),s._v(" "),t("p",[s._v("不同的日志框架（例如 "),t("code",[s._v("Log4j")]),s._v("、"),t("code",[s._v("Logback")]),s._v("、Java 自带的 "),t("code",[s._v("java.util.logging")]),s._v(" 等）具有不同的配置方式，用于设置和管理日志级别。")]),s._v(" "),t("h2",{attrs:{id:"为什么-controller-数据传输通常是用-json-格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么-controller-数据传输通常是用-json-格式"}},[s._v("#")]),s._v(" 为什么 Controller 数据传输通常是用 JSON 格式？")]),s._v(" "),t("p",[s._v("主要原因包括：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("数据格式统一性：")]),s._v(" JSON 提供了一种统一的数据格式，无论是前端还是后端，都可以使用相同的格式来传输数据，这简化了数据交换和处理的复杂性。")]),s._v(" "),t("li",[t("strong",[s._v("跨语言支持：")]),s._v(" JSON 是一种跨语言的数据格式，几乎所有编程语言都支持 JSON 的解析和生成，这使得不同技术栈的应用能够轻松地进行数据交流。")]),s._v(" "),t("li",[t("strong",[s._v("轻量级：")]),s._v(" JSON 是一种轻量级的数据格式，相对于 XML 等其他数据格式来说，它的数据结构更简洁，占用的空间更小，传输效率更高。")]),s._v(" "),t("li",[t("strong",[s._v("易于阅读和调试：")]),s._v(" JSON 的文本表示形式相对容易阅读和理解，这在调试和排查问题时非常有用。")]),s._v(" "),t("li",[t("strong",[s._v("前后端分离：")]),s._v(" 在现代 Web 开发中，通常采用前后端分离的架构。前端通常使用 JavaScript 来处理数据，而 JSON 恰好是 JavaScript 对象的文本表示，因此非常适合前后端分离的场景。")]),s._v(" "),t("li",[t("strong",[s._v("RESTful API：")]),s._v(" JSON 与 RESTful API 结合紧密。RESTful API 通常使用 HTTP 请求和 JSON 响应来进行通信，这使得数据的传输和处理更加直观和简单。")]),s._v(" "),t("li",[t("strong",[s._v("丰富的数据结构：")]),s._v(" JSON 支持多种数据类型，包括字符串、数字、布尔值、数组和对象，这使得它能够表示复杂的数据结构和关系型数据。")]),s._v(" "),t("li",[t("strong",[s._v("生态系统支持：")]),s._v(" JSON 有丰富的工具和库支持，可以方便地在各种开发环境中使用。")])]),s._v(" "),t("p",[s._v("总的来说，JSON 具有轻量级、跨语言、易于阅读和处理等特点。")]),s._v(" "),t("p",[t("em",[s._v("其他格式")])]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("XML：")]),s._v(" XML 是另一种常见的数据传输格式，它具有丰富的数据验证和类型信息，适用于某些需要强类型数据的场景。在某些行业标准中，如SOAP协议中，仍然广泛使用XML。")]),s._v(" "),t("li",[t("strong",[s._v("Protocol Buffers（Protobuf）：")]),s._v(" Protobuf 是一种二进制数据传输格式，它具有高效的编解码性能和紧凑的数据表示。它通常用于需要高性能和小尺寸数据传输的场景。")]),s._v(" "),t("li",[t("strong",[s._v("MessagePack：")]),s._v(" MessagePack 也是一种二进制数据传输格式，类似于 JSON，但更紧凑和高效。它适用于需要快速数据传输的场景。")]),s._v(" "),t("li",[t("strong",[s._v("Thrift：")]),s._v(" Thrift 是一种多语言支持的跨语言数据传输框架，它支持多种数据格式，并提供了数据传输的代码生成工具。它常用于大规模分布式系统中。")]),s._v(" "),t("li",[t("strong",[s._v("GraphQL：")]),s._v(" GraphQL 是一种用于 API 查询的查询语言和运行时环境，它允许客户端指定返回的数据结构，避免了过度或不足的数据传输。")]),s._v(" "),t("li",[t("strong",[s._v("自定义数据格式：")]),s._v(" 根据特定需求，您还可以设计和使用自定义的数据传输格式，以满足项目的特殊要求。")])]),s._v(" "),t("p",[t("em",[s._v("以下是 JSON 字符串在网络传输中的一般流程：")])]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("数据封装")]),s._v("：JSON 字符串可以通过各种网络协议进行传输，包括 HTTP、WebSocket、MQTT 等。在 HTTP 中，JSON 数据通常作为 HTTP 请求的正文（Request Body）或响应的一部分来传输。数据在传输过程中可以经过加密和压缩等处理以提高安全性和性能。")]),s._v(" "),t("li",[t("strong",[s._v("数据传输")]),s._v("：JSON 字符串可以通过各种网络协议进行传输，包括 HTTP、WebSocket、MQTT 等。在 HTTP 中，JSON 数据通常作为 HTTP 请求的正文（Request Body）或响应的一部分来传输。数据在传输过程中可以经过加密和压缩等处理以提高安全性和性能。")]),s._v(" "),t("li",[t("strong",[s._v("数据接收")]),s._v("：在接收端，网络应用程序接收 JSON 字符串。这可以是服务器接收来自客户端的请求，或者客户端接收来自服务器的响应。接收的 JSON 字符串需要解析以将其转换回应用程序可用的数据结构。编程语言通常提供了解析 JSON 字符串的库或函数。例如，在 JavaScript 中，可以使用 "),t("code",[s._v("JSON.parse()")]),s._v(" 来将 JSON 字符串解析为 JavaScript 对象。")]),s._v(" "),t("li",[t("strong",[s._v("数据处理")]),s._v("：接收的 JSON 数据可以用于数据呈现、更新 UI、计算、存储等各种用途，具体取决于应用程序的需求。")])]),s._v(" "),t("h2",{attrs:{id:"devops-是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devops-是什么"}},[s._v("#")]),s._v(" DevOps 是什么？")]),s._v(" "),t("p",[s._v('"DevOps" 是 "Development"（开发）和 "Operations"（运维）两个词的组合，是一种软件开发和运维领域的实践和文化，旨在改进开发团队和运维团队之间的协作、通信和自动化流程，以缩短软件系统的开发周期、提高质量、降低成本。')]),s._v(" "),t("p",[s._v("DevOps 通过自动化工具和流程的使用，使开发和运维更加紧密合作，以便更快地交付软件更新和新功能，同时保持稳定的系统运行。关键原则和实践包括：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("持续集成（CI）")]),s._v("：开发人员频繁地将代码合并到主干，并通过自动化构建和测试流程确保代码的质量。")]),s._v(" "),t("li",[t("strong",[s._v("持续交付（CD）")]),s._v("：自动化软件交付流程，以便在任何时候都能够快速、可靠地部署新代码。")]),s._v(" "),t("li",[t("strong",[s._v("自动化")]),s._v("：自动化各种重复的任务，包括部署、配置管理、测试和监视。")]),s._v(" "),t("li",[t("strong",[s._v("监视和反馈")]),s._v("：实时监视应用程序性能和系统健康，以便及早发现和解决问题。")]),s._v(" "),t("li",[t("strong",[s._v("协作")]),s._v("：促进开发和运维之间的紧密协作，减少沟通障碍。")])]),s._v(" "),t("p",[s._v("DevOps 的目标是"),t("strong",[s._v("加速软件开发和发布过程")]),s._v("，使组织能够更快地适应市场需求，提供更好的用户体验，并降低运维成本。它已经成为现代软件开发中的一个关键实践，并在各种行业中得到广泛采用。")]),s._v(" "),t("p",[t("em",[s._v("Jenkins")])]),s._v(" "),t("p",[s._v("Jenkins 是 DevOps 领域中非常重要的开源工具和产品之一。Jenkins 旨在自动化软件构建、测试和部署过程，以支持"),t("strong",[s._v("持续集成（CI）和持续交付（CD）")]),s._v("。以下是关于 Jenkins 的一些关键信息：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("持续集成（CI）")]),s._v("：Jenkins 允许开发团队频繁地将代码合并到主干，并在每次提交后"),t("em",[s._v("自动")]),s._v("构建、测试和部署应用程序。这有助于尽早发现和解决潜在问题，并确保代码的质量。")]),s._v(" "),t("li",[t("strong",[s._v("可扩展性")]),s._v("：Jenkins 提供了大量的插件和扩展，使它可以与各种不同的工具和技术集成，包括版本控制系统、构建工具、测试框架、容器化平台等。")]),s._v(" "),t("li",[t("strong",[s._v("自动化")]),s._v("：Jenkins 允许用户配置自动化构建和部署任务，这些任务可以根据特定的触发条件（如代码提交或定时触发）自动执行。")]),s._v(" "),t("li",[t("strong",[s._v("分布式构建")]),s._v("：Jenkins 支持在多个代理节点上分布式执行构建任务，以加速构建过程。")]),s._v(" "),t("li",[t("strong",[s._v("社区支持")]),s._v("：Jenkins 是一个开源项目，有庞大的社区支持，可以获得广泛的文档和插件支持。")]),s._v(" "),t("li",[t("strong",[s._v("可视化")]),s._v("：Jenkins 提供了用户友好的 Web 界面，使用户能够轻松查看构建和部署任务的状态以及日志输出。")]),s._v(" "),t("li",[t("strong",[s._v("持续交付（CD）")]),s._v("：Jenkins 可以集成到持续交付流程中，以实现自动化部署到各种环境，包括测试、预生产和生产环境。")])]),s._v(" "),t("p",[s._v("Jenkins 被广泛用于各种软件开发和运维场景中，它帮助团队提高交付速度、减少人工干预、降低错误率，并支持"),t("em",[s._v("敏捷开发")]),s._v("和 DevOps 实践。")]),s._v(" "),t("ul",[t("li",[s._v("它是 DevOps 工具链中的一个关键组成部分，")]),s._v(" "),t("li",[s._v("与版本控制系统（如Git）、")]),s._v(" "),t("li",[s._v("容器化平台（如Docker）、")]),s._v(" "),t("li",[s._v("自动化配置管理工具（如Ansible）等工具一起使用，实现了持续集成和持续交付的目标。")])]),s._v(" "),t("h2",{attrs:{id:"前端请求和集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端请求和集群"}},[s._v("#")]),s._v(" 前端请求和集群")]),s._v(" "),t("p",[t("strong",[s._v("关系")])]),s._v(" "),t("ul",[t("li",[s._v("前端和集群之间的关系是通过网络通信实现的。前端通过使用HTTP协议或其他通信协议，将请求发送到后端服务所在的集群中。")]),s._v(" "),t("li",[s._v("负载均衡器负责将请求分发给集群中的某一个后端服务实例，后端服务实例接收请求、处理业务逻辑，并将响应发送回前端。")])]),s._v(" "),t("p",[t("strong",[s._v("集群问题")])]),s._v(" "),t("p",[s._v("在一个集群中，可以有多个服务实例运行在不同的机器上，每个服务实例都可以拥有不同的 IP 地址和端口号。一种常见的做法是使用负载均衡器，通过负载均衡器将请求分发到不同的服务实例上。")]),s._v(" "),t("p",[s._v("以下是集群中服务的一些可能情况：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("相同 IP，不同端口：")]),s._v(" "),t("ul",[t("li",[s._v("不同服务实例运行在相同的机器上，但使用不同的端口号。例如，一个服务实例可能监听在 "),t("code",[s._v("192.168.1.100:8080")]),s._v("，另一个服务实例监听在 "),t("code",[s._v("192.168.1.100:8081")]),s._v("。")])])]),s._v(" "),t("li",[t("strong",[s._v("相同端口，不同 IP：")]),s._v(" "),t("ul",[t("li",[s._v("不同服务实例运行在不同的机器上，但使用相同的端口号。例如，一个服务实例可能监听在 "),t("code",[s._v("192.168.1.100:8080")]),s._v("，另一个服务实例监听在 "),t("code",[s._v("192.168.1.101:8080")]),s._v("。")])])]),s._v(" "),t("li",[t("strong",[s._v("不同 IP，不同端口：")]),s._v(" "),t("ul",[t("li",[s._v("不同服务实例运行在不同的机器上，且使用不同的端口号。例如，一个服务实例可能监听在 "),t("code",[s._v("192.168.1.100:8080")]),s._v("，另一个服务实例监听在 "),t("code",[s._v("192.168.1.101:8081")]),s._v("。")])])]),s._v(" "),t("li",[t("strong",[s._v("负载均衡：")]),s._v(" "),t("ul",[t("li",[s._v("使用负载均衡器来分发请求，负载均衡器通常拥有一个公共的 IP 地址和端口号，而后端的服务实例可以有不同的 IP 和端口号。负载均衡器会根据某种算法（如轮询、最小连接数等）将请求分发到不同的服务实例上。")])])])]),s._v(" "),t("p",[s._v("选择不同的部署方式取决于具体的需求和架构设计。使用负载均衡器可以实现请求的分发和故障转移，同时允许服务实例在不同的机器上运行。这样的设计提高了系统的可伸缩性和可用性。")])])}),[],!1,null,null,null);t.default=e.exports}}]);