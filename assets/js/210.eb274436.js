(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{540:function(s,a,e){"use strict";e.r(a);var t=e(1),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git-分支管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-分支管理"}},[s._v("#")]),s._v(" git 分支管理")]),s._v(" "),a("p",[s._v("在 Git 中，分支合并是一个常见的操作，用于将一个分支的更改集成到另一个分支中。合并后会生成一个新的提交记录，这个过程可以通过多种方式实现。下面详细介绍几种常用的合并方法及其命令。")]),s._v(" "),a("h2",{attrs:{id:"_1-快进合并-fast-forward-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-快进合并-fast-forward-merge"}},[s._v("#")]),s._v(" 1. 快进合并 (Fast-Forward Merge)")]),s._v(" "),a("p",[s._v("快进合并是最简单的情况，当目标分支的最新提交是你要合并分支的一个祖先时，Git 只需将指针向前移动即可完成合并。这种情况下"),a("strong",[s._v("不会生成新的提交记录")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("步骤：")])]),s._v(" "),a("ol",[a("li",[s._v("切换到目标分支："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout main\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("合并源分支："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge feature\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("p",[s._v("如果 "),a("code",[s._v("main")]),s._v(" 分支的最新提交是 "),a("code",[s._v("feature")]),s._v(" 分支的一个"),a("strong",[s._v("祖先")]),s._v("，那么 Git 会执行快进合并，直接将 "),a("code",[s._v("main")]),s._v(" 分支的指针移动到 "),a("code",[s._v("feature")]),s._v(" 分支的最新提交位置。")]),s._v(" "),a("h2",{attrs:{id:"_2-非快进合并-no-fast-forward-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-非快进合并-no-fast-forward-merge"}},[s._v("#")]),s._v(" 2. 非快进合并 (No Fast-Forward Merge)")]),s._v(" "),a("p",[s._v("如果你希望在"),a("strong",[s._v("合并时强制生成一个新的提交记录")]),s._v("，即使可以进行快进合并，可以使用 "),a("code",[s._v("--no-ff")]),s._v(" 选项。这样可以保留分支的历史记录，方便后续追踪。")]),s._v(" "),a("p",[a("strong",[s._v("步骤：")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("切换到目标分支：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout main\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("合并源分支，并生成一个新的提交记录：")]),s._v(" "),a("p",[s._v("⚠️注意：使用此命令时，【暂存区域】不能有文件，即所有修改需先提交，否则会执行失败")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff feature\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("idea 终端窗口执行时，会自动生成一个新的提交记录，键入 "),a("code",[s._v(":wq + 回车")]),s._v(" 即可。")])]),s._v(" "),a("h3",{attrs:{id:"自定义合并提交信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义合并提交信息"}},[s._v("#")]),s._v(" 自定义合并提交信息")]),s._v(" "),a("p",[s._v("在使用 "),a("code",[s._v("git merge --no-ff")]),s._v(" 命令时，Git 会默认为你生成一条合并提交信息。不过，你也可以在合并时提供自定义的提交信息。要实现这一点，可以使用 "),a("code",[s._v("--message")]),s._v(" 或 "),a("code",[s._v("-m")]),s._v(" 选项。")]),s._v(" "),a("h3",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),a("p",[s._v("假设你有一个 "),a("code",[s._v("main")]),s._v(" 分支和一个 "),a("code",[s._v("dev")]),s._v(" 分支，你希望将 "),a("code",[s._v("dev")]),s._v(" 分支的更改合并到 "),a("code",[s._v("main")]),s._v(" 分支，并生成一个新的提交记录，同时提供自定义的提交信息。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("切换到 "),a("code",[s._v("main")]),s._v(" 分支：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout main\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("合并 "),a("code",[s._v("dev")]),s._v(" 分支，并提供自定义的提交信息：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge dev into main with custom message"')]),s._v(" dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"_3-解决合并冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-解决合并冲突"}},[s._v("#")]),s._v(" 3. 解决合并冲突")]),s._v(" "),a("p",[s._v("当两个分支都对同一个文件的同一部分进行了修改时，Git 无法自动解决冲突，需要手动解决。")]),s._v(" "),a("p",[a("strong",[s._v("步骤：")])]),s._v(" "),a("ol",[a("li",[s._v("切换到目标分支："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout main\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("尝试合并源分支："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge feature\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("p",[s._v("如果出现冲突，Git 会在冲突文件中标记出冲突的部分。你需要手动编辑这些文件，选择保留或修改冲突的内容。")]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("解决冲突后，将文件标记为已解决："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("conflicted-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("完成合并："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"_4-拉取并合并远程分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-拉取并合并远程分支"}},[s._v("#")]),s._v(" 4. 拉取并合并远程分支")]),s._v(" "),a("p",[s._v("当你从远程仓库拉取并合并分支时，可以使用 "),a("code",[s._v("git pull")]),s._v(" 命令，它实际上是 "),a("code",[s._v("git fetch")]),s._v(" 和 "),a("code",[s._v("git merge")]),s._v(" 的组合。")]),s._v(" "),a("p",[a("strong",[s._v("步骤：")])]),s._v(" "),a("ol",[a("li",[s._v("切换到目标分支："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout main\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("拉取并合并远程分支："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin feature\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"_5-三方合并-three-way-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-三方合并-three-way-merge"}},[s._v("#")]),s._v(" 5. 三方合并 (Three-Way Merge)")]),s._v(" "),a("p",[s._v("在非快进合并中，Git 会使用三方合并策略。三方合并涉及三个不同的提交：")]),s._v(" "),a("ul",[a("li",[s._v("基础提交 (Base Commit)：两个分支的最近共同祖先。")]),s._v(" "),a("li",[s._v("当前分支的最新提交 (HEAD)。")]),s._v(" "),a("li",[s._v("要合并的分支的最新提交。")])]),s._v(" "),a("p",[s._v("Git 会比较这三个提交，生成一个新的合并提交。")])])}),[],!1,null,null,null);a.default=r.exports}}]);