(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{433:function(s,t,a){"use strict";a.r(t);var e=a(1),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"一文教你如何删除重复记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一文教你如何删除重复记录"}},[s._v("#")]),s._v(" 一文教你如何删除重复记录")]),s._v(" "),t("h2",{attrs:{id:"写法一-根据行号和排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写法一-根据行号和排序"}},[s._v("#")]),s._v(" 写法一：根据行号和排序")]),s._v(" "),t("p",[t("strong",[s._v("场景分析：")])]),s._v(" "),t("ul",[t("li",[s._v("现以用户表（"),t("code",[s._v("t_user")]),s._v("）为例，"),t("code",[s._v("uid")]),s._v(" 和 "),t("code",[s._v("id")]),s._v(" 为表中的某个字段。")]),s._v(" "),t("li",[t("code",[s._v("uid")]),s._v(" 是表中的唯一字段，但是因为之前没有加唯一索引，导致内部出现 "),t("code",[s._v("uid")]),s._v(" 重复的数据。")]),s._v(" "),t("li",[s._v("现在需要加唯一索引，但是需要先删除表中多余的重复的脏数据。")])]),s._v(" "),t("p",[t("strong",[s._v("SQL 示例：")])]),s._v(" "),t("p",[s._v("以下是一个删除重复记录的示例 SQL 语句，它将为每个 "),t("code",[s._v("uid")]),s._v(" 保留具有最小 "),t("code",[s._v("id")]),s._v(" 值的记录")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" t_user\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id\n              "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" uid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                           ROW_NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("OVER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PARTITION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" uid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" row_num\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" t_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" ranked\n              "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" row_num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("示例解析：")])]),s._v(" "),t("p",[s._v("在这个例子中，内部查询首先为每个 "),t("code",[s._v("uid")]),s._v(" 分组内的记录分配了一个行号（"),t("code",[s._v("row_num")]),s._v("），根据 "),t("code",[s._v("id")]),s._v(" 字段排序，其中最小的 "),t("code",[s._v("id")]),s._v(" 值对应行号 1。然后，外层的 "),t("code",[s._v("IN")]),s._v(" 子句用来选择那些行号大于 1 的记录，即重复的记录。最后，"),t("code",[s._v("DELETE")]),s._v(" 语句根据 "),t("code",[s._v("id")]),s._v(" 删除这些记录。")]),s._v(" "),t("p",[t("strong",[s._v("语法解析：")])]),s._v(" "),t("p",[t("code",[s._v("ROW_NUMBER() OVER (PARTITION BY uid ORDER BY id) AS row_num")]),s._v(" 是 SQL 中的一个"),t("strong",[s._v("窗口函数")]),s._v("（window function）的语法。窗口函数用于在不失去分组的情况下，对分组内的数据进行计算。")]),s._v(" "),t("p",[s._v("这里是 "),t("code",[s._v("ROW_NUMBER()")]),s._v(" 函数的具体用法：")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("ROW_NUMBER()")]),s._v(": 这是一个"),t("strong",[s._v("窗口函数")]),s._v("，它会为结果集中的每一行分配一个唯一的序号，序号的分配是连续的，从1开始，不管中间是否有空缺。")]),s._v(" "),t("li",[t("code",[s._v("OVER")]),s._v(": 这个关键字用来"),t("strong",[s._v("指定窗口函数的参数")]),s._v("，即定义窗口函数的作用域和排序的顺序。")]),s._v(" "),t("li",[t("code",[s._v("PARTITION BY uid")]),s._v(": 这个子句"),t("strong",[s._v("定义了窗口函数的分区依据")]),s._v("。在这里，"),t("code",[s._v("PARTITION BY")]),s._v(" 将结果集按照 "),t("code",[s._v("uid")]),s._v(" 字段的值进行分组。对于每个 "),t("code",[s._v("uid")]),s._v(" 分区，"),t("code",[s._v("ROW_NUMBER()")]),s._v(" 都会重新从1开始计数。")]),s._v(" "),t("li",[t("code",[s._v("ORDER BY id")]),s._v(": 这个子句"),t("strong",[s._v("定义了窗口函数内部的排序规则")]),s._v("。在这里，它指定了在每个 "),t("code",[s._v("uid")]),s._v(" 分区内部，行应该根据 "),t("code",[s._v("id")]),s._v(" 字段的值进行升序排序。如果有多条记录具有相同的 "),t("code",[s._v("id")]),s._v("，它们的行号可能会是相同的。")]),s._v(" "),t("li",[t("code",[s._v("AS row_num")]),s._v(": 这是给窗口函数的结果"),t("strong",[s._v("指定一个别名")]),s._v("，方便在查询的其他部分引用。在这里，行号被命名为 "),t("code",[s._v("row_num")]),s._v("。")])]),s._v(" "),t("p",[s._v("整个表达式的作用是：对于表 "),t("code",[s._v("t_user")]),s._v(" 中的每条记录，根据 "),t("code",[s._v("uid")]),s._v(" 进行分组，并在每个分组内根据 "),t("code",[s._v("id")]),s._v(" 的升序排列，为每条记录分配一个唯一的行号。")]),s._v(" "),t("p",[s._v("这种语法在处理如去重、分组排序等复杂查询时非常有用。例如，你可以使用这个行号来删除每个 "),t("code",[s._v("uid")]),s._v(" 分组内的重复记录，只保留具有最小 "),t("code",[s._v("id")]),s._v(" 的记录。")]),s._v(" "),t("h2",{attrs:{id:"写法二-max-id"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写法二-max-id"}},[s._v("#")]),s._v(" 写法二："),t("code",[s._v("max(id)")])]),s._v(" "),t("p",[t("strong",[s._v("场景分析：")])]),s._v(" "),t("ul",[t("li",[s._v("唯一键（"),t("code",[s._v("industry_code")]),s._v("）")]),s._v(" "),t("li",[s._v("需要删除多余的重复数据")])]),s._v(" "),t("p",[t("strong",[s._v("SQL 示例：")])]),s._v(" "),t("ul",[t("li",[s._v("查出最大的 id 编号")]),s._v(" "),t("li",[s._v("删除其余数据")]),s._v(" "),t("li",[t("strong",[s._v("筛选条件务必加上")])])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" enterprise_register\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" deleted "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" register_num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" maxId\n                 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" maxId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" industry_code\n                       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" enterprise_register\n                       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" register_num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" \n                         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" deleted "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n                       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" industry_code"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" t2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);