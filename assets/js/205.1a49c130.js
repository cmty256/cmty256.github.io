(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{533:function(a,s,e){"use strict";e.r(s);var v=e(1),t=Object(v.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"ffmpeg-参数篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ffmpeg-参数篇"}},[a._v("#")]),a._v(" ffmpeg 参数篇")]),a._v(" "),s("p",[a._v("下面介绍 FFmpeg 参数相关的知识以及命令格式，从基本语法到参数分类，再到一些常见用法，帮助你更深入地理解 FFmpeg 命令行工具的工作原理。")]),a._v(" "),s("h2",{attrs:{id:"ffmpeg-命令格式概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ffmpeg-命令格式概述"}},[a._v("#")]),a._v(" FFmpeg 命令格式概述")]),a._v(" "),s("p",[a._v("FFmpeg 命令行工具的基本语法大致如下：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("全局参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("输入选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" 输入文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("输出选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" 输出文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("ul",[s("li",[s("strong",[a._v("全局参数")]),a._v("：对整个命令有效，如 "),s("code",[a._v("-y")]),a._v("（覆盖输出文件）、"),s("code",[a._v("-loglevel")]),a._v("（设置日志级别）等。")]),a._v(" "),s("li",[s("strong",[a._v("输入选项")]),a._v("：放在 "),s("code",[a._v("-i")]),a._v(" 前面的参数，只对紧跟其后的输入文件生效，例如 "),s("code",[a._v("-ss")]),a._v(" 用于设置起始时间（快速定位输入流）。")]),a._v(" "),s("li",[s("strong",[a._v("输出选项")]),a._v("：出现在输入文件之后，专门控制输出文件的编码、格式等，如 "),s("code",[a._v("-c:v")]),a._v("（指定视频编码器）、"),s("code",[a._v("-b:a")]),a._v("（音频比特率）等。")])]),a._v(" "),s("p",[a._v("这类结构让 FFmpeg 的命令既灵活又具有明确的定位意义，输入选项和输出选项分别对应数据的不同处理阶段。")]),a._v(" "),s("h4",{attrs:{id:"示例解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例解析"}},[a._v("#")]),a._v(" 示例解析")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ss")]),a._v(" 00:01:00 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 output.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("ul",[s("li",[s("code",[a._v("-y")]),a._v("：全局参数，强制覆盖输出文件。")]),a._v(" "),s("li",[s("code",[a._v("-ss 00:01:00")]),a._v("：输入选项，从输入文件的 1 分钟处开始读取。")]),a._v(" "),s("li",[s("code",[a._v("-t 10")]),a._v("：输出选项，输出视频时长为 10 秒。")]),a._v(" "),s("li",[s("code",[a._v("-i input.mp4")]),a._v("：输入文件。")]),a._v(" "),s("li",[s("code",[a._v("-c:v libx264")]),a._v("：输出选项，指定视频编码器为 H.264。")]),a._v(" "),s("li",[s("code",[a._v("output.mp4")]),a._v("：输出文件路径。")])]),a._v(" "),s("h2",{attrs:{id:"参数分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数分类"}},[a._v("#")]),a._v(" 参数分类")]),a._v(" "),s("h3",{attrs:{id:"全局参数-global-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局参数-global-options"}},[a._v("#")]),a._v(" 全局参数（Global Options）")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("作用范围")]),a._v("：对整个命令生效（包括所有输入和输出），通常在命令开头设置。\n"),s("ul",[s("li",[a._v("控制命令的整体行为（如日志、线程、文件覆盖）。")])])]),a._v(" "),s("li",[s("strong",[a._v("常见参数")]),a._v("：\n"),s("ul",[s("li",[s("code",[a._v("-y")]),a._v("：覆盖已存在的输出文件（无需确认）。")]),a._v(" "),s("li",[s("code",[a._v("-n")]),a._v("：禁止覆盖输出文件。")]),a._v(" "),s("li",[s("code",[a._v("-loglevel <level>")]),a._v("：设置日志输出级别（如 "),s("code",[a._v("error")]),a._v(", "),s("code",[a._v("warning")]),a._v(", "),s("code",[a._v("info")]),a._v(", "),s("code",[a._v("debug")]),a._v("）。")]),a._v(" "),s("li",[s("code",[a._v("-threads <num>")]),a._v("：指定处理线程数。")]),a._v(" "),s("li",[s("code",[a._v("-hide_banner")]),a._v("：隐藏 FFmpeg 版本和编译信息，使命令输出更简洁。")])])])]),a._v(" "),s("p",[a._v("示例")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-hide_banner")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 output.avi\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"输入参数-input-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入参数-input-options"}},[a._v("#")]),a._v(" 输入参数（Input Options）")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("作用范围")]),a._v("：仅对紧随其后的 "),s("code",[a._v("-i")]),a._v(" 输入文件或流生效。\n"),s("ul",[s("li",[a._v("针对每个输入文件设置读取规则（如时间定位、解码方式）。")])])]),a._v(" "),s("li",[s("strong",[a._v("常见参数")]),a._v("：\n"),s("ul",[s("li",[s("code",[a._v("-ss <time>")]),a._v("：快速定位到输入文件的某个时间点（基于关键帧跳跃，速度快但精度低）。")]),a._v(" "),s("li",[s("code",[a._v("-to <time>")]),a._v("：设置输入文件的结束时间。")]),a._v(" "),s("li",[s("code",[a._v("-t <duration>")]),a._v(": 指定持续时间（如 "),s("code",[a._v("-t 10")]),a._v(" 表示处理 10 秒）。")]),a._v(" "),s("li",[s("code",[a._v("-f <format>")]),a._v("：强制指定输入文件的格式（如 "),s("code",[a._v("-f rawvideo")]),a._v(" 处理原始视频流）。")]),a._v(" "),s("li",[s("code",[a._v("-hwaccel <type>")]),a._v("：指定硬件加速解码方式（如 "),s("code",[a._v("cuda")]),a._v(", "),s("code",[a._v("qsv")]),a._v("）。")]),a._v(" "),s("li",[s("code",[a._v("-re")]),a._v("：以真实速率读取输入流，通常用于实时流媒体传输。")])])])]),a._v(" "),s("p",[a._v("示例")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从输入文件的 30 秒处开始读取，持续 5 秒")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 由于未指定编码参数，FFmpeg 将根据输入文件的编解码器和输出文件的容器格式，自动选择适当的编解码器进行转码")]),a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ss")]),a._v(" 00:00:30 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 output.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"输出参数-output-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输出参数-output-options"}},[a._v("#")]),a._v(" 输出参数（Output Options）")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("作用范围")]),a._v("：仅控制输出文件的编码、格式和内容质量。\n"),s("ul",[s("li",[a._v("定义输出文件的编码、格式和内容（如码率、分辨率、滤镜）。")])])]),a._v(" "),s("li",[s("strong",[a._v("核心参数")]),a._v("：\n"),s("ul",[s("li",[s("strong",[a._v("编码器选择")]),a._v("：\n"),s("ul",[s("li",[s("code",[a._v("-c:v <codec>")]),a._v("：视频编码器（如 "),s("code",[a._v("libx264")]),a._v("（H.264 编码器）、"),s("code",[a._v("libx265")]),a._v("（H.265 编码器）, "),s("code",[a._v("copy")]),a._v(" 表示不转码）。")]),a._v(" "),s("li",[s("code",[a._v("-c:a <codec>")]),a._v("：音频编码器（如 "),s("code",[a._v("aac")]),a._v(", "),s("code",[a._v("mp3")]),a._v("）。")]),a._v(" "),s("li",[s("code",[a._v("-c:s <codec>")]),a._v("：字幕编码器（如 "),s("code",[a._v("srt")]),a._v(", "),s("code",[a._v("mov_text")]),a._v("）。")])])]),a._v(" "),s("li",[s("strong",[a._v("码率与质量")]),a._v("：\n"),s("ul",[s("li",[s("code",[a._v("-b:v 2M")]),a._v("：设置视频码率（2Mbps）。")]),a._v(" "),s("li",[s("code",[a._v("-b:a")]),a._v("：设置音频比特率。")]),a._v(" "),s("li",[s("code",[a._v("-crf 23")]),a._v("：常用在 H.264/AVC 编码中，用于控制视频质量（"),s("strong",[a._v("数值越低，视频质量越高，文件越大")]),a._v("）。")]),a._v(" "),s("li",[s("code",[a._v("-vn")]),a._v("：禁用视频流。")]),a._v(" "),s("li",[s("code",[a._v("-q:a 2")]),a._v("：MP3 音频质量（0-9，值越小质量越高）。")])])]),a._v(" "),s("li",[s("strong",[a._v("帧率和分辨率")]),a._v("：\n"),s("ul",[s("li",[s("code",[a._v("-r")]),a._v("：设置帧率，如 "),s("code",[a._v("-r 30")]),a._v(" 表示输出视频为 30 帧每秒。")]),a._v(" "),s("li",[s("code",[a._v("-s")]),a._v("：设置分辨率，如 "),s("code",[a._v("-s 1280x720")]),a._v("。")])])]),a._v(" "),s("li",[s("strong",[a._v("格式与容器")]),a._v("：\n"),s("ul",[s("li",[s("code",[a._v("-f")]),a._v("：指定输出文件格式，例如 "),s("code",[a._v("-f mp4")]),a._v("、"),s("code",[a._v("-f flv")]),a._v(" 等，有时可以省略，由输出文件扩展名自动识别。")])])]),a._v(" "),s("li",[s("strong",[a._v("滤镜处理")]),a._v("：\n"),s("ul",[s("li",[s("code",[a._v('-vf "scale=1280:720"')]),a._v("：缩放视频分辨率。"),s("code",[a._v("-vf")]),a._v(" 可用于执行缩放、裁剪、叠加文字等操作")]),a._v(" "),s("li",[s("code",[a._v('-af "volume=0.5"')]),a._v("：降低音频音量。")])])]),a._v(" "),s("li",[s("strong",[a._v("时间控制")]),a._v("：\n"),s("ul",[s("li",[s("code",[a._v("-ss <time>")]),a._v("：输出文件的起始时间（"),s("strong",[a._v("需与输入选项的 "),s("code",[a._v("-ss")]),a._v(" 区分")]),a._v("）。")]),a._v(" "),s("li",[s("code",[a._v("-t <duration>")]),a._v("：输出文件的持续时间。")])])])])])]),a._v(" "),s("p",[a._v("示例")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将输入视频缩放为 720p，转码为 H.265，并降低音频码率")]),a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-vf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"scale=1280:720"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx265 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-crf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("25")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b:a")]),a._v(" 128k output.mp4\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 快速剪切视频（不转码）")]),a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ss")]),a._v(" 00:00:30 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-to")]),a._v(" 00:02:00 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" copy output.mp4\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 硬件加速转码（NVIDIA GPU）")]),a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-hwaccel")]),a._v(" cuda "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" h264_nvenc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b:v")]),a._v(" 5M output.mp4\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提取音频并转换格式")]),a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-vn")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" libmp3lame "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q:a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" output.mp3\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 应用了两个滤镜：缩放和添加文本")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将视频缩放至宽度 640 像素，高度 360 像素。scale 滤镜常用于调整视频尺寸。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加文本“Hello”。文本颜色为白色（fontcolor=white），字体大小为 24（fontsize=24）。drawtext 滤镜用于在视频帧上渲染文本。")]),a._v("\nffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-vf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"scale=640:360,drawtext=text='Hello':fontcolor=white:fontsize=24\"")]),a._v(" output.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br")])]),s("blockquote",[s("p",[a._v("需要注意的是，使用 "),s("code",[a._v("-c copy")]),a._v(" 时，")]),a._v(" "),s("ul",[s("li",[a._v("FFmpeg 只能在关键帧（I 帧）上进行剪辑。")]),a._v(" "),s("li",[a._v("如果指定的开始时间 "),s("code",[a._v("00:00:30")]),a._v(" 不是关键帧，FFmpeg 将自动调整到最近的关键帧，这可能导致剪辑的起始时间与预期不完全一致。")]),a._v(" "),s("li",[a._v("因此，如果您需要"),s("strong",[a._v("精确")]),a._v("地从特定时间点开始剪辑，建议不使用 "),s("code",[a._v("-c copy")]),a._v("，让 FFmpeg 重新编码视频，以确保准确性。")])])]),a._v(" "),s("h2",{attrs:{id:"参数顺序与位置的重要性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数顺序与位置的重要性"}},[a._v("#")]),a._v(" 参数顺序与位置的重要性")]),a._v(" "),s("p",[a._v("在 FFmpeg 命令行中，参数的位置非常重要。常见注意事项包括：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("输入选项与输出选项")]),a._v("：\n例如，"),s("code",[a._v("-ss")]),a._v(" 如果放在 "),s("code",[a._v("-i")]),a._v(" 之前会影响读取速度（跳转到指定位置），而放在输出参数中则会影响剪辑精度。")]),a._v(" "),s("li",[s("strong",[a._v("多个输入或输出")]),a._v("：\n当存在多个 "),s("code",[a._v("-i")]),a._v(" 时，每个输入可以单独设置相应的选项，输出选项也会分别对应前面的输入。正确设置顺序有助于确保每个文件按照预期处理。")])]),a._v(" "),s("h2",{attrs:{id:"高级参数与调优技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级参数与调优技巧"}},[a._v("#")]),a._v(" 高级参数与调优技巧")]),a._v(" "),s("h3",{attrs:{id:"编码优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码优化"}},[a._v("#")]),a._v(" 编码优化")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("CRF 与预设")]),a._v("：\n对于 H.264 编码，常使用 "),s("code",[a._v("-crf")]),a._v(" 控制质量，同时使用 "),s("code",[a._v("-preset")]),a._v(" 调整编码速度和压缩效率。数值较低表示更高质量但文件更大；预设从 "),s("code",[a._v("ultrafast")]),a._v(" 到 "),s("code",[a._v("veryslow")]),a._v(" 不等。")]),a._v(" "),s("li",[s("strong",[a._v("GOP 结构调整")]),a._v("：\n通过 "),s("code",[a._v("-g")]),a._v(" 参数设置关键帧间隔（GOP size），合理的 GOP 结构可以提高视频的播放流畅度和压缩率。")])]),a._v(" "),s("h3",{attrs:{id:"多路复用与流媒体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多路复用与流媒体"}},[a._v("#")]),a._v(" 多路复用与流媒体")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("容器格式：")]),a._v(" "),s("p",[a._v("使用 "),s("code",[a._v("-f")]),a._v(" 参数可以指定输出格式，如实时流媒体传输时常用 "),s("code",[a._v("flv")]),a._v(" 格式：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-re")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" input.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:v")]),a._v(" libx264 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c:a")]),a._v(" aac "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" flv rtmp://server/app/stream\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("优化 MP4 文件")]),a._v("：")]),a._v(" "),s("p",[a._v("使用 "),s("code",[a._v("-movflags +faststart")]),a._v(" 参数可以使 MP4 文件在网络环境下更快开始播放，因为它将关键元数据移至文件开头。")])])]),a._v(" "),s("h3",{attrs:{id:"复杂滤镜链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂滤镜链"}},[a._v("#")]),a._v(" 复杂滤镜链")]),a._v(" "),s("p",[a._v("使用 "),s("code",[a._v("-filter_complex")]),a._v(" 参数可以实现多路输入和多路输出的高级处理，比如视频拼接、画中画（PIP）等。")]),a._v(" "),s("p",[a._v("例如，将两个视频并排拼接：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ffmpeg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" left.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" right.mp4 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-filter_complex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[0:v][1:v]hstack=inputs=2"')]),a._v(" output.mp4\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[a._v("#")]),a._v(" 注意事项")]),a._v(" "),s("ol",[s("li",[s("strong",[a._v("输入/输出选项的 "),s("code",[a._v("-ss")]),a._v(" 区别")]),a._v("：\n"),s("ul",[s("li",[a._v("输入选项 "),s("code",[a._v("-ss")]),a._v("：快速定位，但精度低。")]),a._v(" "),s("li",[a._v("输出选项 "),s("code",[a._v("-ss")]),a._v("：逐帧处理，精度高但速度慢。")])])]),a._v(" "),s("li",[s("strong",[a._v("流选择冲突")]),a._v("：\n"),s("ul",[s("li",[a._v("默认情况下，FFmpeg 会为每个输出文件自动选择一个视频流、一个音频流和一个字幕流。使用 "),s("code",[a._v("-map")]),a._v(" 手动指定流可避免意外结果。")])])]),a._v(" "),s("li",[s("strong",[a._v("格式兼容性")]),a._v("：\n"),s("ul",[s("li",[a._v("输出文件的封装格式（如 MP4、MKV）需支持所选编码器（如 H.265 需 MP4 支持）。")])])])])])}),[],!1,null,null,null);s.default=t.exports}}]);